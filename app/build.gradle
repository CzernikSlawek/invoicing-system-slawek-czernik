/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3.1/userguide/building_java_projects.html
 */

buildscript {
    ext {
        lombokVersion = '1.18.24'
        spockVersion = '2.0-groovy-3.0'
        springBootVersion = '2.7.8'
        springDependencyManagmentVersion = '1.1.0'
        groovyVersion = '3.0.9'
        fasterxmlVersion = '2.11.1'
    }
}

plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${springDependencyManagmentVersion}"

    // Apply the groovy plugin to also add support for Groovy (needed for Spock)
    id 'groovy'

    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    id 'checkstyle'
    id 'jacoco'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use the latest Groovy version for Spock testing
    testImplementation "org.codehaus.groovy:groovy:${groovyVersion}"

    // Use the awesome Spock testing and specification framework even with Java
    testImplementation "org.spockframework:spock-core:${spockVersion}"
    testImplementation "org.spockframework:spock-spring:${spockVersion}"
    testImplementation "junit:junit:4.13.2"

    // This dependency is used by the application.
    implementation "com.google.guava:guava:30.1.1-jre"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    implementation "org.springframework.boot:spring-boot-starter-web"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    implementation "com.fasterxml.jackson.core:jackson-databind:${fasterxmlVersion}"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${fasterxmlVersion}"
    testImplementation "org.spockframework:spock-spring:1.3-groovy-2.5"
}

application {
    // Define the main class for the application.
    mainClass = 'pl.futurecollars.invoicing.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

checkstyle {
    showViolations = true
    ignoreFailures = false
    maxWarnings = 0
    maxErrors = 0
}

test {
    finalizedBy jacocoTestReport //report is always generated after tests run
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'BRANCH'
                minimum = 0.85
            }
        }
        rule {
            limit {
                counter = 'LINE'
                minimum = 0.85
            }
        }
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: 'pl/futurecollars/invoicing/InvoiceApplication.class')
        }))
    }
}